<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css">
    <script src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js"></script>
</head>
<body class="bg-[#c6b39d] h-screen">
    <!-- Nav Bar -->
    <div id="navbar" class="flex fixed items-center justify-between px-4 py-3.5 md:px-8 lg:px-7 bg-gray-100 top-0 left-0 w-full z-50 shadow-lg">
        <img class="h-10" src="https://i.ibb.co/mrF0YKRm/image.png" alt="The Bag Company">
        <div id="add-cart" class="relative">
            <a href="/appli">
                <img id="cart-icon" class="w-10 bg-gray-200 absolute cursor-pointer" src="https://cdn-icons-png.flaticon.com/128/9774/9774450.png" alt="Cart">
            </a>
            <h3 class="ml-12 mt-2 text-2xl font-bold">My Cart</h3>
        </div>
        <div id="menu" class="hidden md:flex md:items-center md:space-x-7">
            <a href="/shop" class="font-bold cursor-pointer hover:text-gray-700">Home</a>
            <a class="font-bold" href="/users/logout">Logout</a>
        </div>
    </div>

    <!-- Cart Section -->
    <div class=" flex mt-[5rem] px-8 gap-6">
        <!-- Scrollable Cart Items -->
        <div class="w-2/3 h-[calc(100vh-7rem)]">
            <% user.cart.forEach(function(item){ %>
            <!-- Cart Item -->
            <div class=" flex transition-transform duration-500 hover:scale-110 shadow-lg mt-5 bg-[<%= item.panelcolor %>] relative p-4">
                <img class="h-[100px] w-[100px] object-cover" src="data:image/jpeg;base64,<%= item.image.toString('base64')%>" alt="">
                <div class="ml-4">
                    <p class="font-semibold text-lg"><%= item.name %></p>
                    <p class="text-sm">Price: ₹<%= item.price %></p>
                    <p class="ml-auto font-bold">Discount: ₹<%= item.discount %></p>
                    <p class="ml-auto font-bold"><%= item.about %></p>
                </div>
                <div class="absolute top-2 right-2 font-bold">
                    <p>Price: ₹<%= item.price %></p>
                </div>
                <!-- Remove Button -->
                <button class="remove-btn bg-red-500 text-white px-3 py-1 rounded absolute top-20 right-8 mt-5 mt-auto"
                    data-product-id="<%= item._id %>">
                    Remove
                </button>
            </div>
            
            <% }) %>
        </div>

        <!-- Order Summary (Sticky) -->
        <div class="w-1/3 bg-white p-6  shadow-lg sticky-top mt-[1rem]">
            <h2 class="text-xl font-bold mb-4">Order Summary</h2>
            <div class="flex justify-between mt-4 mb-2">
                <p>Subtotal</p>
                <p class="font-bold">₹<%= bill  %></p>
            </div>

            <div class="flex justify-between mb-2">
                <p>Shipping</p>
                <p class="font-bold">Free</p>
            </div>
            <div class="flex justify-between mb-2">
                <p>Tax</p>
                <p class="font-bold">Free</p>
            </div>
            <hr class="border-black mb-2">
            <div class="flex justify-between text-lg font-bold">
                <p>Estimated Total</p>
                <p>₹<%= bill  %></p>
            </div>
            <hr class="border-black mt-2 mb-2">
           <div ><p >Feedback:</p>
            <div class="w-full mt-1 mb-2 max-w-sm min-w-[200px]">
                <input class="w-full  bg-transparent placeholder:text-black  text-sm border border-slate-400 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" placeholder="Type here...">
              </div>
        </div> 
           <div><p>Phone Number:</p>
            <div class="w-full mt-1 mb-2 max-w-sm min-w-[200px]">
                <input class="w-full bg-transparent placeholder:text-black  text-sm border border-slate-400 rounded-md px-3 py-2 transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow" placeholder="Type here...">
              </div>
        </div> 

        <button type="submit" class="bg-black text-white w-full py-2 mt-2 rounded" onclick="payNow()">Proceed to Checkout</button>
        <p class="font-semibold mb-2 mt-1">Powered By</p>
        <div><img class=" ml-[6rem]  " height="200px" width="200px" src="/images/pngwing.com (1).png" alt=""></div>
        </div>

    </div>
    




    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        async function payNow() {
            const amount = <%= bill %>;  // Get the total bill amount from the template
    
            const response = await fetch("/api/payment/create-order", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ amount })
            });
    
            const data = await response.json();
            if (!data.success) {
                alert("Error creating order");
                return;
            }
    
            const options = {
                key: "<%= process.env.RAZORPAY_KEY_ID %>", // Use your Razorpay Key ID
                amount: data.order.amount,
                currency: data.order.currency,
                name: "The Bag Company !",
                description: "Purchase Order",
                order_id: data.order.id,
                handler: async function (response) {
                    const verifyResponse = await fetch("/api/payment/verify-payment", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(response)
                    });
    
                    const verifyData = await verifyResponse.json();
                    if (verifyData.success) {
                        alert("Payment successful! Order will be Delievered soon ");
                        
                        // Redirect to a success page or update the UI accordingly
                    } else {
                        alert("Payment verification failed!");
                    }
                },
                prefill: {
                    name: "Username",
                    email: "Email",
                    contact: "9999999999"
                },
                theme: { color: "#3399cc" }
            };
    
            const rzp = new Razorpay(options);
            rzp.open();
        }

        document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".remove-btn").forEach(button => {
        button.addEventListener("click", async function () {
            const productId = this.getAttribute("data-product-id");

            const response = await fetch(`/cart/${productId}`, { method: "DELETE" });

            const result = await response.json();
            if (result.success) {
                alert("Item removed from cart!");
                location.reload(); // Refresh the page to update the cart
            } else {
                alert("Failed to remove item from cart.");
            }
        });
    });
});


    </script>
    

</body>
</html>
